{"version":3,"file":"overrides.min.js","sources":["../src/overrides.js"],"sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handles overlays/tooltips in checkmark!\n *\n * @module   mod_checkmark/checkboxcontroller\n * @author    Philipp Hager\n * @copyright 2018 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_checkmark/overrides\n */\ndefine(['jquery', 'jqueryui', 'core/str', 'core/log'], function($, jqui, str, log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/overrides\n     */\n    var Overrides = function() {\n        /**\n         * @var object table object to use\n         */\n        this.table = {};\n    };\n\n    var instance = new Overrides();\n\n    /**\n     * Initialises the JavaScript\n     * @param {array} config Config params\n     */\n    instance.initializer = function(config) {\n        this.table = $(config.id);\n\n        log.info('Initialize report JS!', 'mod_checkmark');\n\n        var tofetch = [\n            {key: 'dates_overwritten', component: 'mod_checkmark'},\n            {key: 'availabledate', component: 'mod_checkmark'},\n            {key: 'duedate', component: 'mod_checkmark'},\n            {key: 'cutoffdate', component: 'mod_checkmark'}\n        ];\n        str.get_strings(tofetch).done(function(s) {\n\n            log.info('Successfully acquired strings: ' + s, 'mod_checkmark');\n            log.info('Register tooltips!', 'mod_checkmark');\n\n            $('#mod-checkmark-submissions').tooltip({\n                items: '.overridetooltip',\n                track: true,\n                content: function() {\n                    var element = $(this);\n\n                    var timeavailable = element.data('timeavailable');\n                    var timedue = element.data('timedue');\n                    var cutoffdate = element.data('cutoffdate');\n\n                    var content = '<div class=\"checkmarkoverlay\"';\n                    content += 'aria-describedby=\"' + element.attr('id') + '\">';\n                    content += s[0]; // Is string 'dates_overwritten' from 'mod_checkmark'!\n\n                    if (timeavailable !== '') {\n                        content += '<div class=\"timeavailable\">' + s[1] + // Is string 'timeavailable' from 'mod_checkmark']!\n                                '&nbsp;' + timeavailable + '</div>';\n                    }\n                    if (timedue !== '') {\n                        content += '<div class=\"timedue\">' + s[2] + // Is string 'timedue' from 'mod_checkmark'!\n                                '&nbsp;' + timedue + '</div>';\n                    }\n                    if (cutoffdate !== '') {\n                        content += '<div class=\"cutoffdate\">' + s[3] + // Is string 'cutoffdate' from 'mod_checkmark'!\n                                '&nbsp;' + cutoffdate + '</div>';\n                    }\n\n                    content += '</div>';\n\n                    return content;\n                }\n            });\n        }).fail(function(ex) {\n            log.error('Error getting strings: ' + ex, 'mod_checkmark');\n        });\n    };\n\n    return instance;\n});\n"],"names":["define","$","jqui","str","log","Overrides","instance","table","initializer","config","this","id","info","get_strings","key","component","done","s","tooltip","items","track","content","element","timeavailable","data","timedue","cutoffdate","attr","fail","ex","error"],"mappings":";;;;;;;;AA2BAA,iCAAO,CAAC,SAAU,WAAY,WAAY,aAAa,SAASC,EAAGC,KAAMC,IAAKC,KAMtEC,IAOAC,SAAW,IAPC,WAIPC,KAAAA,MAAQ,IA8DjB,OArDAD,SAASE,YAAc,SAASC,QAC5BC,KAAKH,MAAQN,EAAEQ,OAAOE,IAEtBP,IAAIQ,KAAK,wBAAyB,iBAQlCT,IAAIU,YANU,CACV,CAACC,IAAK,oBAAqBC,UAAW,iBACtC,CAACD,IAAK,gBAAiBC,UAAW,iBAClC,CAACD,IAAK,UAAWC,UAAW,iBAC5B,CAACD,IAAK,aAAcC,UAAW,mBAEVC,MAAK,SAASC,GAEnCb,IAAIQ,KAAK,kCAAoCK,EAAG,iBAChDb,IAAIQ,KAAK,qBAAsB,iBAE/BX,EAAE,8BAA8BiB,QAAQ,CACpCC,MAAO,mBACPC,OAAO,EACPC,QAAS,WACL,IAAIC,QAAUrB,EAAES,MAEZa,cAAgBD,QAAQE,KAAK,iBAC7BC,QAAUH,QAAQE,KAAK,WACvBE,WAAaJ,QAAQE,KAAK,cAE1BH,QAAU,gCAmBd,OAlBAA,SAAW,qBAAuBC,QAAQK,KAAK,MAAQ,KACvDN,SAAWJ,EAAE,GAES,KAAlBM,gBACAF,SAAW,8BAAgCJ,EAAE,GACrC,SAAWM,cAAgB,UAEvB,KAAZE,UACAJ,SAAW,wBAA0BJ,EAAE,GAC/B,SAAWQ,QAAU,UAEd,KAAfC,aACAL,SAAW,2BAA6BJ,EAAE,GAClC,SAAWS,WAAa,UAGpCL,SAAW,eAKpBO,MAAK,SAASC,IACbzB,IAAI0B,MAAM,0BAA4BD,GAAI,qBAI3CvB"}