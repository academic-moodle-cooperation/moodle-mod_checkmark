{"version":3,"sources":["../src/overrides.js"],"names":["define","$","jqui","str","log","instance","Overrides","table","initializer","config","id","info","get_strings","key","component","done","s","tooltip","items","track","content","element","timeavailable","data","timedue","cutoffdate","attr","fail","ex","error"],"mappings":"AA2BAA,OAAM,2BAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,UAAvB,CAAmC,UAAnC,CAAD,CAAiD,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAuBC,CAAvB,CAA4B,IAa3EC,CAAAA,CAAQ,CAAG,GAPC,SAAZC,CAAAA,SAAY,EAAW,CAIvB,KAAKC,KAAL,CAAa,EAChB,CAX8E,CAmB/EF,CAAQ,CAACG,WAAT,CAAuB,SAASC,CAAT,CAAiB,CACpC,KAAKF,KAAL,CAAaN,CAAC,CAACQ,CAAM,CAACC,EAAR,CAAd,CAEAN,CAAG,CAACO,IAAJ,CAAS,uBAAT,CAAkC,eAAlC,EAQAR,CAAG,CAACS,WAAJ,CANc,CACV,CAACC,GAAG,CAAE,mBAAN,CAA2BC,SAAS,CAAE,eAAtC,CADU,CAEV,CAACD,GAAG,CAAE,eAAN,CAAuBC,SAAS,CAAE,eAAlC,CAFU,CAGV,CAACD,GAAG,CAAE,SAAN,CAAiBC,SAAS,CAAE,eAA5B,CAHU,CAIV,CAACD,GAAG,CAAE,YAAN,CAAoBC,SAAS,CAAE,eAA/B,CAJU,CAMd,EAAyBC,IAAzB,CAA8B,SAASC,CAAT,CAAY,CAEtCZ,CAAG,CAACO,IAAJ,CAAS,kCAAoCK,CAA7C,CAAgD,eAAhD,EACAZ,CAAG,CAACO,IAAJ,CAAS,oBAAT,CAA+B,eAA/B,EAEAV,CAAC,CAAC,4BAAD,CAAD,CAAgCgB,OAAhC,CAAwC,CACpCC,KAAK,CAAE,kBAD6B,CAEpCC,KAAK,GAF+B,CAGpCC,OAAO,CAAE,UAAW,IACZC,CAAAA,CAAO,CAAGpB,CAAC,CAAC,IAAD,CADC,CAGZqB,CAAa,CAAGD,CAAO,CAACE,IAAR,CAAa,eAAb,CAHJ,CAIZC,CAAO,CAAGH,CAAO,CAACE,IAAR,CAAa,SAAb,CAJE,CAKZE,CAAU,CAAGJ,CAAO,CAACE,IAAR,CAAa,YAAb,CALD,CAOZH,CAAO,CAAG,iCAPE,CAQhBA,CAAO,EAAI,sBAAuBC,CAAO,CAACK,IAAR,CAAa,IAAb,CAAvB,CAA4C,KAAvD,CACAN,CAAO,EAAIJ,CAAC,CAAC,CAAD,CAAZ,CAEA,GAAsB,EAAlB,GAAAM,CAAJ,CAA0B,CACtBF,CAAO,EAAI,gCAAgCJ,CAAC,CAAC,CAAD,CAAjC,CACH,QADG,CACQM,CADR,CACwB,QACtC,CACD,GAAgB,EAAZ,GAAAE,CAAJ,CAAoB,CAChBJ,CAAO,EAAI,0BAA0BJ,CAAC,CAAC,CAAD,CAA3B,CACH,QADG,CACQQ,CADR,CACkB,QAChC,CACD,GAAmB,EAAf,GAAAC,CAAJ,CAAuB,CACnBL,CAAO,EAAI,6BAA6BJ,CAAC,CAAC,CAAD,CAA9B,CACH,QADG,CACQS,CADR,CACqB,QACnC,CAEDL,CAAO,EAAI,QAAX,CAEA,MAAOA,CAAAA,CACV,CA9BmC,CAAxC,CAgCH,CArCD,EAqCGO,IArCH,CAqCQ,SAASC,CAAT,CAAa,CACjBxB,CAAG,CAACyB,KAAJ,CAAU,0BAA4BD,CAAtC,CAA0C,eAA1C,CACH,CAvCD,CAwCH,CAnDD,CAqDA,MAAOvB,CAAAA,CACV,CAzEK,CAAN","sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handles overlays/tooltips in checkmark!\n *\n * @module   mod_checkmark/checkboxcontroller\n * @author    Philipp Hager\n * @copyright 2018 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module mod_checkmark/overrides\n */\ndefine(['jquery', 'jqueryui', 'core/str', 'core/log'], function($, jqui, str, log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/overrides\n     */\n    var Overrides = function() {\n        /**\n         * @var object table object to use\n         */\n        this.table = {};\n    };\n\n    var instance = new Overrides();\n\n    /**\n     * Initialises the JavaScript\n     * @param config Config params\n     */\n    instance.initializer = function(config) {\n        this.table = $(config.id);\n\n        log.info('Initialize report JS!', 'mod_checkmark');\n\n        var tofetch = [\n            {key: 'dates_overwritten', component: 'mod_checkmark'},\n            {key: 'availabledate', component: 'mod_checkmark'},\n            {key: 'duedate', component: 'mod_checkmark'},\n            {key: 'cutoffdate', component: 'mod_checkmark'}\n        ];\n        str.get_strings(tofetch).done(function(s) {\n\n            log.info('Successfully acquired strings: ' + s, 'mod_checkmark');\n            log.info('Register tooltips!', 'mod_checkmark');\n\n            $('#mod-checkmark-submissions').tooltip({\n                items: '.overridetooltip',\n                track: true,\n                content: function() {\n                    var element = $(this);\n\n                    var timeavailable = element.data('timeavailable');\n                    var timedue = element.data('timedue');\n                    var cutoffdate = element.data('cutoffdate');\n\n                    var content = '<div class=\"checkmarkoverlay\"';\n                    content += 'aria-describedby=\"' + element.attr('id') + '\">';\n                    content += s[0]; // Is string 'dates_overwritten' from 'mod_checkmark'!\n\n                    if (timeavailable !== '') {\n                        content += '<div class=\"timeavailable\">' + s[1] + // Is string 'timeavailable' from 'mod_checkmark']!\n                                '&nbsp;' + timeavailable + '</div>';\n                    }\n                    if (timedue !== '') {\n                        content += '<div class=\"timedue\">' + s[2] + // Is string 'timedue' from 'mod_checkmark'!\n                                '&nbsp;' + timedue + '</div>';\n                    }\n                    if (cutoffdate !== '') {\n                        content += '<div class=\"cutoffdate\">' + s[3] + // Is string 'cutoffdate' from 'mod_checkmark'!\n                                '&nbsp;' + cutoffdate + '</div>';\n                    }\n\n                    content += '</div>';\n\n                    return content;\n                }\n            });\n        }).fail(function(ex) {\n            log.error('Error getting strings: ' + ex, 'mod_checkmark');\n        });\n    };\n\n    return instance;\n});\n"],"file":"overrides.min.js"}