{"version":3,"sources":["../src/submission.js"],"names":["define","log","$","Submission","prototype","updateSummary","examplesNew","gradeNew","each","checked","parseInt","dataset","grade","html","toString","resetSubmissionForm","event","preventDefault","reset","instance","initializer","length","debug","on","form"],"mappings":"AA2BAA,OAAM,4BAAC,CAAC,UAAD,CAAa,QAAb,CAAD,CAAyB,SAASC,CAAT,CAAcC,CAAd,CAAiB,CAM5C,GAAIC,CAAAA,CAAU,CAAG,UAAW,CAC3B,CADD,CAQAA,CAAU,CAACC,SAAX,CAAqBC,aAArB,CAAqC,UAAW,IACxCC,CAAAA,CAAW,CAAG,CAD0B,CAExCC,CAAQ,CAAG,CAF6B,CAI5CL,CAAC,CAAC,qBAAD,CAAD,CAAyBM,IAAzB,CAA8B,UAAW,CACrC,GAAI,KAAKC,OAAT,CAAkB,CACdH,CAAW,GACXC,CAAQ,EAAIG,QAAQ,CAAC,KAAKC,OAAL,CAAaC,KAAd,CACvB,CACJ,CALD,EAOAV,CAAC,CAAC,WAAD,CAAD,CAAeW,IAAf,CAAoBP,CAAW,CAACQ,QAAZ,EAApB,EACAZ,CAAC,CAAC,QAAD,CAAD,CAAYW,IAAZ,CAAiBN,CAAQ,CAACO,QAAT,EAAjB,EACA,QACH,CAdD,CAwBAX,CAAU,CAACC,SAAX,CAAqBW,mBAArB,CAA2C,SAASC,CAAT,CAAgB,CACvDA,CAAK,CAACC,cAAN,GACAf,CAAC,CAAC,iBAAD,CAAD,CAAqB,CAArB,EAAwBgB,KAAxB,GACAf,CAAU,CAACC,SAAX,CAAqBC,aAArB,GACA,QACH,CALD,CAOA,GAAIc,CAAAA,CAAQ,CAAG,GAAIhB,CAAAA,CAAnB,CAOAgB,CAAQ,CAACC,WAAT,CAAuB,UAAW,CAE9B,GAAIlB,CAAC,CAAC,gBAAD,CAAD,CAAoBmB,MAAxB,CAAgC,CAC5BpB,CAAG,CAACqB,KAAJ,CAAU,gCAAV,CAA4C,WAA5C,EAEApB,CAAC,CAAC,qBAAD,CAAD,CAAyBqB,EAAzB,CAA4B,OAA5B,CAAqCJ,CAAQ,CAACd,aAA9C,EAEAH,CAAC,CAAC,iBAAD,CAAD,CAAqBqB,EAArB,CAAwB,OAAxB,CAAiC,KAAKR,mBAAtC,EAGA,GAAMS,CAAAA,CAAI,CAAGtB,CAAC,CAAC,iBAAD,CAAD,CAAqB,CAArB,CAAb,CACA,GAAIsB,CAAJ,CAAU,CACNA,CAAI,CAACN,KAAL,EACH,CAED,KAAKb,aAAL,EACH,CACD,QACH,CAlBD,CAoBA,MAAOc,CAAAA,CACV,CAzEK,CAAN","sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * submission.js\n *\n * @module   mod_checkmark/checkboxcontroller\n * @author    Philipp Hager\n * @copyright 2014 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module mod_checkmark/submission\n  */\ndefine(['core/log', 'jquery'], function(log, $) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/submission\n     */\n    let Submission = function() {\n    };\n\n    /**\n     * UpdateSummary updates the displayed summary during submission edit\n     *\n     * @return {boolean} true if everything's alright (no error handling by now)\n     */\n    Submission.prototype.updateSummary = function() {\n        let examplesNew = 0;\n        let gradeNew = 0;\n\n        $('input[data-example]').each(function() {\n            if (this.checked) {\n                examplesNew++;\n                gradeNew += parseInt(this.dataset.grade);\n            }\n        });\n\n        $('#examples').html(examplesNew.toString());\n        $('#grade').html(gradeNew.toString());\n        return true;\n    };\n\n    /**\n     * ResetSubmissionForm reset method replaces std-reset-behaviour\n     *   I) prevents default reset behaviour\n     *  II) resets the form manually\n     * III) ensure to display updated data\n     * @param {Event} event event-object\n     * @return {boolean} true if everything's allright (no error handling by now)\n     */\n    Submission.prototype.resetSubmissionForm = function(event) {\n        event.preventDefault();\n        $('.submissionform')[0].reset();\n        Submission.prototype.updateSummary();\n        return true;\n    };\n\n    let instance = new Submission();\n\n    /**\n     * Initializer prepares checkmark-data and registers event-listeners for each checkbox\n     *\n     * @return {boolean} true if everything's ok (no error-handling implemented)\n     */\n    instance.initializer = function() {\n        // Only execute init if checkmarkform is actually present.\n        if ($('#checkmarkform').length) {\n            log.debug('Init checkmark submissions js!', 'checkmark');\n            // Register event-listener on checkboxes to ensure update of the check counter.\n            $('input[data-example]').on('click', instance.updateSummary);\n            // Register event-listener on reset-button to ensure proper data to be displayed on form-reset!\n            $('#id_resetbutton').on('click', this.resetSubmissionForm);\n\n            // Reset the formular after init to ensure correct checkbox-states after page-reload!\n            const form = $('.submissionform')[0];\n            if (form) {\n                form.reset();\n            }\n            // Update summary to display correct data after form-reset!\n            this.updateSummary();\n        }\n        return true;\n    };\n\n    return instance;\n});\n"],"file":"submission.min.js"}