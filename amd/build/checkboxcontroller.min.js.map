{"version":3,"sources":["../src/checkboxcontroller.js"],"names":["define","$","log","Checkboxcontroller","ID","table","prototype","updateCheckboxes","e","preventDefault","stopPropagation","type","data","info","inst","prop","checkboxes","each","idx","current","instance","initializer","params","debug","id","on"],"mappings":"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","sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * checkboxcontroller.js\n *\n * @module   mod_checkmark/checkboxcontroller\n * @author    Philipp Hager\n * @copyright 2014 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module mod_checkmark/checkboxcontroller\n  */\ndefine(['jquery', 'core/log'], function($, log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/checkboxcontroller\n     */\n    var Checkboxcontroller = function() {\n        // Controller ID!\n        this.ID = '';\n        // Table ID!\n        this.table = $('.usersubmissions table.submissions');\n    };\n\n    /**\n     * Function updateSummary() updates the displayed summary during submission edit\n     *\n     * @param {Event} e event object\n     * @return {bool} true if everything's alright (no error handling by now)\n     */\n    Checkboxcontroller.prototype.updateCheckboxes = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var type = e.data.type;\n\n        log.info('Update checkboxes (type = ' + type + ')');\n\n        // The .checkboxgroup1 selector is needed so only selection checkboxes are checked or unchecked.\n        if (type == 'all') {\n            $(e.data.inst.table + ' input[type=\"checkbox\"].checkboxgroup1').prop('checked', true);\n        } else if (type == 'none') {\n            $(e.data.inst.table + ' input[type=\"checkbox\"].checkboxgroup1').prop('checked', false);\n        } else {\n            var checkboxes = $(e.data.inst.table + ' input[type=\"checkbox\"].checkboxgroup1');\n\n            checkboxes.each(function(idx, current) {\n                if ($(current).data(type) == 1) {\n                    $(current).prop('checked', true);\n                } else {\n                    $(current).prop('checked', false);\n                }\n            });\n        }\n\n        return true;\n    };\n\n    var instance = new Checkboxcontroller();\n\n    /**\n     * Initializer prepares checkmark-data and registers event-listeners for each checkbox\n     *\n     * @param {array} params contains table and ID selectors\n     * @return {bool} true if everything's ok (no error-handling implemented)\n     */\n    instance.initializer = function(params) {\n        log.debug(\"Init checkboxcontroller (\" + params.id + \")!\\nfor table \" + params.table, 'checkmark');\n\n        if (params.table !== '') {\n            instance.table = params.table;\n        }\n        if (params.id !== '') {\n            instance.id = params.id;\n        } else {\n            instance.id = '';\n        }\n\n        $('#' + instance.id + ' a.all').on('click', null, {inst: this, type: 'all'}, this.updateCheckboxes);\n        $('#' + instance.id + ' a.none').on('click', null, {inst: this, type: 'none'}, this.updateCheckboxes);\n        $('#' + instance.id + ' a.graded').on('click', null, {inst: this, type: 'graded'}, this.updateCheckboxes);\n        $('#' + instance.id + ' a.submitted').on('click', null, {inst: this, type: 'submitted'}, this.updateCheckboxes);\n        $('#' + instance.id + ' a.ungraded').on('click', null, {inst: this, type: 'ungraded'}, this.updateCheckboxes);\n\n        return true;\n    };\n\n    return instance;\n});\n"],"file":"checkboxcontroller.min.js"}