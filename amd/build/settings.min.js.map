{"version":3,"file":"settings.min.js","sources":["../src/settings.js"],"sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * settings.js\n *\n * @module   mod_checkmark/checkboxcontroller\n * @author    Philipp Hager\n * @copyright 2014 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module mod_checkmark/settings\n  */\ndefine(['jquery', 'core/log'], function($, log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/settings\n     */\n    var Settings = function() {\n        this.dividingSymbol = ',';\n    };\n\n    /**\n     * UpdateSettings updates the grade-selector appropriate to the given\n     * individual grades (flexiblenaming = 1) or the given amount of examples (flexiblenaming = 0)\n     *\n     * @param {Event} e event object\n     * @return {bool} true if everything's allright (no error handling by now)\n     */\n    Settings.prototype.updateSettings = function(e) {\n        var gradeSum = 0;\n        var i = 0;\n\n        // First we strip everything we don't need!\n        e.data.stripper(e);\n\n        var typeSelector = '#id_grade_modgrade_type';\n        var pointSelector = '#id_grade_modgrade_point';\n        var flexibleNamingSelector = '#id_flexiblenaming';\n        var exampleGradesSelector = '#id_examplegrades';\n        var exampleNamesSelector = '#id_examplenames';\n        var exampleCountSelector = '#id_examplecount';\n\n        // If non-numeric scales are used or checkmark isn't graded at all, ignore changes!\n        if ($(typeSelector).val() !== 'point') {\n            return true;\n        }\n        if ($(flexibleNamingSelector).prop('checked')) {\n            // Calculate gradesum using individual grades list!\n            // Replace occurences of more than 1 comma in row through a single one...\n            var regex1 = new RegExp(e.data.dividingSymbol + \"{2,}\", \"g\");\n            $(exampleGradesSelector).val($(exampleGradesSelector).val().replace(regex1, e.data.dividingSymbol));\n            // Strip trailling and following commata!\n            if (e.type !== 'valuechange') {\n                var regex2 = new RegExp(\"^\" + e.data.dividingSymbol + \"*|\" + e.data.dividingSymbol + \"*$\", \"g\");\n                $(exampleGradesSelector).val($(exampleGradesSelector).val().replace(regex2, \"\"));\n                $(exampleNamesSelector).val($(exampleNamesSelector).val().replace(regex2, \"\"));\n            }\n            // Get string and strip every character except \",\" (comma) and numerics!\n            var regex3 = new RegExp(\"[^0-9\" + e.data.dividingSymbol + \"]\");\n            var tempString = $(exampleGradesSelector).val().replace(regex3, \"\");\n            var tempArray = tempString.split(e.data.dividingSymbol);\n            for (i = 0; i < tempArray.length; i++) {\n                if (tempArray[i].replace(/[^\\d]/g, \"\") !== \"\") {\n                    gradeSum += parseInt(tempArray[i].replace(/[^\\d]/g, \"\"));\n                }\n            }\n        } else {\n            // Calculate gradesum using example-amount (each example counts 1 point)!\n            gradeSum = $(exampleCountSelector).val();\n        }\n\n        if (!$(flexibleNamingSelector).prop('checked')) {\n            if ($(pointSelector).val() % gradeSum === 0) {\n                // Grade is integral multiple of gradesum (= examplecount) so everything's fine!\n                return true;\n            }\n        }\n        if ((gradeSum <= 100) && (gradeSum > 0)) {\n            $(typeSelector).val('point');\n            $(pointSelector).val(gradeSum);\n        } else if (gradeSum < 0) {\n            $(typeSelector).val('scale');\n        }\n\n        return true;\n    };\n\n    /**\n     * Strips unwanted characters from examplegrades field!\n     *\n     * @param {Event} e event object\n     * @returns {boolean} true if everything's OK\n     */\n    Settings.prototype.stripper = function(e) {\n        if ((e !== null) && (e.which <= 46)) { // That means: no written character!\n            return true;\n        }\n        var exampleGradesSelector = '#examplegrades';\n        if (!$(exampleGradesSelector).length) {\n            // Compatibility to pre 2.2 and current needed ID - TODO: do we need this anymore?\n            exampleGradesSelector = '#id_examplegrades';\n        }\n\n        var regex = new RegExp(\"[^0-9\" + e.data.dividingSymbol + \"]\", \"g\");\n        $(exampleGradesSelector).val($(exampleGradesSelector).val().replace(regex, \"\"));\n        return true;\n    };\n\n    var instance = new Settings();\n\n    /**\n     * Initializer prepares settings form for JS-functionality\n     *\n     * @param {Array} config contains object with all examples\n     * @return {bool} true if everything's ok (no error-handling implemented)\n     */\n    instance.initializer = function(config) {\n        instance.dividingSymbol = config.dividingSymbol;\n\n        log.info('Initialize settings JS', 'checkmark');\n\n        var typeSelector = '#id_grade_modgrade_type';\n        var flexibleNamingSelector = \"#id_flexiblenaming\";\n        var exampleGradesSelector = \"#id_examplegrades\";\n        var exampleNamesSelector = \"#id_examplenames\";\n        var exampleCountSelector = \"#id_examplecount\";\n        $(flexibleNamingSelector).click(instance, instance.updateSettings);\n        $(typeSelector).change(instance, instance.updateSettings);\n        $(exampleGradesSelector).change(instance, instance.updateSettings);\n        $(exampleNamesSelector).change(instance, instance.updateSettings);\n        $(exampleCountSelector).change(instance, instance.updateSettings);\n        $(exampleGradesSelector).blur(instance, instance.updateSettings);\n        $(exampleNamesSelector).blur(instance, instance.updateSettings);\n        $(exampleCountSelector).blur(instance, instance.updateSettings);\n        $(exampleGradesSelector).keyup(instance, instance.stripper);\n\n        if ($(\"input[name=allready_submit]\").val() === 'no') {\n            instance.updateSettings({data: instance});\n        }\n\n        return true;\n    };\n\n    return instance;\n});\n"],"names":["define","$","log","Settings","dividingSymbol","prototype","updateSettings","e","gradeSum","i","data","stripper","val","prop","regex1","RegExp","replace","type","regex2","regex3","tempArray","split","length","parseInt","which","exampleGradesSelector","regex","instance","initializer","config","info","click","change","blur","keyup"],"mappings":";;;;;;;;AA2BAA,OAAM,yBAAC,CAAC,SAAU,aAAa,SAASC,EAAGC,KAMnCC,IAAAA,SAAW,WACNC,KAAAA,eAAiB,KAU1BD,SAASE,UAAUC,eAAiB,SAASC,GACrCC,IAAAA,SAAW,EACXC,EAAI,EAGRF,EAAEG,KAAKC,SAASJ,GAUZN,GAA0B,UAA1BA,EARe,2BAQCW,MAChB,OAAO,EAEPX,GAAAA,EATyB,sBASCY,KAAK,WAAY,CAG3C,IAAIC,OAAS,IAAIC,OAAOR,EAAEG,KAAKN,eAAiB,OAAQ,KAGxD,GAFAH,EAZwB,qBAYCW,IAAIX,EAZL,qBAY8BW,MAAMI,QAAQF,OAAQP,EAAEG,KAAKN,iBAEpE,gBAAXG,EAAEU,KAAwB,CACtBC,IAAAA,OAAS,IAAIH,OAAO,IAAMR,EAAEG,KAAKN,eAAiB,KAAOG,EAAEG,KAAKN,eAAiB,KAAM,KAC3FH,EAhBoB,qBAgBKW,IAAIX,EAhBT,qBAgBkCW,MAAMI,QAAQE,OAAQ,KAC5EjB,EAhBmB,oBAgBKW,IAAIX,EAhBT,oBAgBiCW,MAAMI,QAAQE,OAAQ,KAG9E,IAAIC,OAAS,IAAIJ,OAAO,QAAUR,EAAEG,KAAKN,eAAiB,KAEtDgB,UADanB,EArBO,qBAqBkBW,MAAMI,QAAQG,OAAQ,IACrCE,MAAMd,EAAEG,KAAKN,gBACxC,IAAKK,EAAI,EAAGA,EAAIW,UAAUE,OAAQb,IACa,KAAvCW,UAAUX,GAAGO,QAAQ,SAAU,MAC/BR,UAAYe,SAASH,UAAUX,GAAGO,QAAQ,SAAU,WAK5DR,SAAWP,EA5BY,oBA4BYW,MAGnC,OAACX,EAlCwB,sBAkCEY,KAAK,YAC5BZ,EApCY,4BAoCKW,MAAQJ,UAAa,IAKzCA,UAAY,KAASA,SAAW,GACjCP,EA3Ce,2BA2CCW,IAAI,SACpBX,EA3CgB,4BA2CCW,IAAIJ,WACdA,SAAW,GAClBP,EA9Ce,2BA8CCW,IAAI,UAGjB,IASXT,SAASE,UAAUM,SAAW,SAASJ,GAC9BA,GAAM,OAANA,GAAgBA,EAAEiB,OAAS,GAC5B,OAAO,EAEPC,IAAAA,sBAAwB,iBACvBxB,EAAEwB,uBAAuBH,SAE1BG,sBAAwB,qBAG5B,IAAIC,MAAQ,IAAIX,OAAO,QAAUR,EAAEG,KAAKN,eAAiB,IAAK,KAE9D,OADAH,EAAEwB,uBAAuBb,IAAIX,EAAEwB,uBAAuBb,MAAMI,QAAQU,MAAO,MACpE,GAGX,IAAIC,SAAW,IAAIxB,SAmCnB,OA3BAwB,SAASC,YAAc,SAASC,QAC5BF,SAASvB,eAAiByB,OAAOzB,eAEjCF,IAAI4B,KAAK,yBAA0B,aAqBnC,OAdA7B,EAJ6B,sBAIH8B,MAAMJ,SAAUA,SAASrB,gBACnDL,EANmB,2BAMH+B,OAAOL,SAAUA,SAASrB,gBAC1CL,EAL4B,qBAKH+B,OAAOL,SAAUA,SAASrB,gBACnDL,EAL2B,oBAKH+B,OAAOL,SAAUA,SAASrB,gBAClDL,EAL2B,oBAKH+B,OAAOL,SAAUA,SAASrB,gBAClDL,EAR4B,qBAQHgC,KAAKN,SAAUA,SAASrB,gBACjDL,EAR2B,oBAQHgC,KAAKN,SAAUA,SAASrB,gBAChDL,EAR2B,oBAQHgC,KAAKN,SAAUA,SAASrB,gBAChDL,EAX4B,qBAWHiC,MAAMP,SAAUA,SAAShB,UAEH,OAA3CV,EAAE,+BAA+BW,OACjCe,SAASrB,eAAe,CAACI,KAAMiB,YAG5B,GAGJA"}